// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_DATABASE_URL")
}

model Address {
  id            String    @id @default(cuid())
  streetAddress String?
  city          String?
  county        String?
  postTown      String?
  postCode      String?
  country       String?   @default("United Kingdom")
  settings      Settings?
  client        Client?
  Property      Property?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Settings {
  id                  String   @id @default(cuid())
  name                String?
  email               String?  @unique
  phone               String?
  picture             String?
  governingBody       String?
  governingBodyNumber String?
  address             Address? @relation(fields: [addressId], references: [id], onDelete: Cascade)
  addressId           String?  @unique
}

enum UserRole {
  Admin
  Manager
  Planner
  Operative
  Client
}

model User {
  id                                               String                                  @id @default(cuid())
  auth0Id                                          String                                  @unique
  name                                             String
  email                                            String                                  @unique
  phone                                            String?
  signature                                        String?
  role                                             UserRole
  clients                                          Client[]
  electricalInstallationConditionReportAsCreator   ElectricalInstallationConditionReport[] @relation("Creator")
  electricalInstallationConditionReportAsInspector ElectricalInstallationConditionReport[] @relation("Inspector")
  electricalInstallationConditionReportAsTester    ElectricalInstallationConditionReport[] @relation("Tester")
  electricalInstallationConditionReportAsReviewer  ElectricalInstallationConditionReport[] @relation("Reviewer")
  createdAt                                        DateTime                                @default(now())
  updatedAt                                        DateTime                                @updatedAt
}

model Client {
  id                                    String                                  @id @default(cuid())
  name                                  String
  phone                                 String?
  picture                               String?
  appointedPerson                       String?
  address                               Address?                                @relation(fields: [addressId], references: [id], onDelete: Cascade)
  addressId                             String?                                 @unique
  users                                 User[]
  property                              Property[]
  electricalInstallationConditionReport ElectricalInstallationConditionReport[]
  createdAt                             DateTime                                @default(now())
  updatedAt                             DateTime                                @updatedAt
}

model Property {
  id                                    String                                  @id @default(cuid())
  uprn                                  String
  occupier                              String
  address                               Address?                                @relation(fields: [addressId], references: [id], onDelete: Cascade)
  addressId                             String?                                 @unique
  client                                Client                                  @relation(fields: [clientId], references: [id])
  electricalInstallationConditionReport ElectricalInstallationConditionReport[]
  createdAt                             DateTime                                @default(now())
  updatedAt                             DateTime                                @updatedAt
  clientId                              String
}

enum EICRStatus {
  Draft
  Submitted
  Rejected
  Completed
}

model ElectricalInstallationConditionReport {
  id          String      @id @default(cuid())
  type        String?     @default("Electrical Installation Condition Report")
  serial      String?
  startDate   DateTime?   @default(now())
  endDate     DateTime?   @default(now())
  status      EICRStatus? @default(Draft)
  creator     User        @relation("Creator", fields: [creatorId], references: [id])
  creatorId   String
  inspector   User?       @relation("Inspector", fields: [inspectorId], references: [id])
  inspectorId String?
  tester      User?       @relation("Tester", fields: [testerId], references: [id])
  testerId    String?
  reviewer    User?       @relation("Reviewer", fields: [reviewerId], references: [id])
  reviewerId  String?
  client      Client      @relation(fields: [clientId], references: [id])
  clientId    String
  property    Property    @relation(fields: [propertyId], references: [id])
  propertyId  String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}
