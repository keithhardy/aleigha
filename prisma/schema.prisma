// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_DATABASE_URL")
}

model User {
  id        String       @id @default(cuid())
  name      String
  email     String       @unique
  position  UserPosition
  phone     String?
  signature String?
  picture   String?
  logs      Log[]
  groups    Group[]
  messages  Message[]
}

enum UserPosition {
  ADMINISTRATOR
  MANAGER
  SUPERVISOR
  PLANNER
  OPERATIVE
  CLIENT
}

model Log {
  id        String    @id @default(cuid())
  userId    String
  user      User      @relation(fields: [userId], references: [id])
  model     LogModel
  action    LogAction
  status    LogStatus
  message   String
  error     String?
  createdAt DateTime  @default(now())
}

enum LogModel {
  USER
  PERMISSION
  QUALIFICATION
  EQUIPMENT
  CONTRACTOR
  CLIENT
  PROPERTY
  CERTIFICATE
  JOB
  GROUP
  MESSAGE
}

enum LogAction {
  CREATE
  READ
  UPDATE
  DELETE
}

enum LogStatus {
  SUCCESS
  FAILED
}

model Group {
  id       String    @id @default(cuid())
  name     String
  users    User[]
  messages Message[]
}

model Message {
  id        String   @id @default(cuid())
  content   String
  sender    User     @relation(fields: [senderId], references: [id])
  senderId  String
  group     Group    @relation(fields: [groupId], references: [id])
  groupId   String
  createdAt DateTime @default(now())
}
